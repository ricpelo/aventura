!
! AVENTURA
!
! Copyright (c) 2021 Ricardo Pérez López (Alpha Aventuras)
!

! This program is free software: you can redistribute it and/or modify
! it under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version.
!
! This program is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
! GNU General Public License for more details.
!
! You should have received a copy of the GNU General Public License
! along with this program.  If not, see <http://www.gnu.org/licenses/>.


!===============================================================================
! (1) Constantes; Variables Globales; Replaces; Propertys; Incluir Parser.h
!-------------------------------------------------------------------------------


! ====================================================================
! CONSTANTES
! ====================================================================


Constant Story "@<<AVENTURA@>>";
Constant Headline "^(c) 2021 Ricardo Pérez^^";
Release 1;

! Queremos usar el comando 'Salidas'
Constant ADMITIR_COMANDO_SALIDAS;

! No queremos usar los comandos 'Lugares' y 'Objetos'
Constant NO_PLACES;

! No queremos usar puntuación
Constant NO_SCORE;

! Queremos que se muestren las deducciones del parser
!Constant IMPRIMIR_DEDUCCIONES;

! Hay curiosidades al final del juego
!Constant AMUSING_PROVIDED;

! Al acabar una partida (con éxito o fracaso) te da la opción de UNDO:
Constant DEATH_MENTION_UNDO;

#ifdef TARGET_GLULX;
! No queremos marcos en las cajas hechas con el comando box:
Constant GBOXQUOTE_NOFRAME;
#endif;

! Si se ha activado el listado automático de salidas:
Global mostrarSalidas = true;


! ====================================================================
! VARIABLES GLOBALES
! ====================================================================


! ====================================================================
! REPLACES
! ====================================================================

#ifdef TARGET_GLULX;
Replace Box__Routine;
Replace StatusLineHeight;
Replace DrawStatusLine;
#endif;
Replace QuitarAcentos;


! ====================================================================
! PROPERTIES
! ====================================================================


! ====================================================================
! INCLUIR "Parser.h"
! ====================================================================


Include "Parser";


!===============================================================================
! (2) Puntos de Entrada para Glk [solo en Glulx]:
!     -  HandleGlkEvent(), IdentifyGlkObject(), InitGlkWindow()
!-------------------------------------------------------------------------------


!===============================================================================
! (3) Modificar Mensajes de la Libreria; Otros Includes; Incluir VerbLib.h
!-------------------------------------------------------------------------------


Include "VerbLib";

#ifdef TARGET_GLULX;
Include "InfGlk_NG";
Include "GlulxBox";         ! Usar el comando box con Glulx - gracias a Eliuk
#endif;
Include "Contenedor";       ! Contenedores
Include "EscenarioAbrible"; ! Escenario que se puede abrir y cerrar
!Include "EventList_NG";     ! Listas de mensajes
!Include "ExaminarFalso";    ! Poder examinar objetos sólo con su nombre
Include "IntNombre_NG";     ! Poder usar adjetivos como en InformATE


!===============================================================================
! (4) Rutina Initialise()
!-------------------------------------------------------------------------------


[ Initialise;
!  location = thedark;
!  dibujarEstado = false;

  ! Esto es para que el juego dé siempre la descripción de la habitación, aunque
  ! ya la hayamos visitado
  lookmode = 2;

  ! Inventario en una sola frase:
  inventory_style = ENGLISH_BIT + RECURSE_BIT + FULLINV_BIT;

  ! Parseado estricto (de la librería IntNombre):
  parseado_estricto = 1;

  ! Nombre de la oscuridad
  thedark.short_name = "Oscuridad";

  ! Localización donde comienza el jugador
  location = cuarto_katie;

!  AsignarPersona(PRIMERA_PERSONA + PERSONA_SINGULAR);
!  give player female;

!  clearTextWindow();
];


!===============================================================================
! (5) Rutinas de la Libreria Implementadas, Reemplazadas o Ampliadas
!-------------------------------------------------------------------------------


[ Amusing;
  rfalse;
];


#ifdef TARGET_GLULX;
[ DrawStatusLine
  pos;
  if (gg_statuswin == 0) rfalse;
  glk_set_window(gg_statuswin);
  StatusLineHeight(1);
  glk_window_clear(gg_statuswin);
  glk_window_move_cursor(gg_statuswin, 0, 0);
  glk_set_style(style_SubHeader);
  print (name) location;
  if (turns < 10)         pos = 1;
  else if (turns < 100)   pos = 2;
  else if (turns < 1000)  pos = 3;
  else if (turns < 10000) pos = 4;
  else                    pos = 5;
  glk_window_get_size(gg_statuswin, gg_arguments,
                      gg_arguments + WORDSIZE);
  pos = gg_arguments-->0 - pos - 10;
  glk_window_move_cursor(gg_statuswin, pos, 0);
  print "| Turnos: ", turns;
  glk_set_window(gg_mainwin);
];
#endif;


! Modificado para que ?, !, ¿, ¡ se separen de las palabras al parsear:
[ QuitarAcentos buf pars x i word at len;
  Tokenise__(buf, pars);
  for (x = 1: x <= tokenCount(pars): x++) { ! para cada token
    word = tokenDict(pars,x); ! dictionary value of token 1,2,3...
    at   = tokenPos(pars,x);  ! position in buffer of token 1,2,3...
    len  = WordLength(x);     ! length in chars of token 1,2,3...

    if (word == 0) { ! no comprendida
      for (i = at: i < at + len: i++)
        switch (buf->i) {
          'á', 'à', 'ä', 'â': buf->i = 'a';
          'é', 'è', 'ë', 'ê': buf->i = 'e';
          'í', 'ì', 'ï', 'î': buf->i = 'i';
          'ó', 'ò', 'ö', 'ô': buf->i = 'o';
          'ú', 'ù', 'ü', 'û': buf->i = 'u';
          'ñ': buf->i = 'n';
          'ç': buf->i = 'c';
          '?': buf->i = ' ';
          '¿': buf->i = ' ';
          '!': buf->i = ' ';
          '¡': buf->i = ' ' ;
        }
      Tokenise__(buf, pars);
    }
  }
];


#ifdef TARGET_GLULX;
! Modificado para que no ponga un borde debajo de la línea de estado:
[ StatusLineHeight hgt parwin;
  if (gg_statuswin == 0) return;
  parwin = glk($0029, gg_statuswin); ! window_get_parent
  glk($0026, parwin, $112, hgt, 0); ! window_set_arrangement
  gg_statuswin_cursize = hgt;
];
#endif;


! Para el Examinar Falso:
[ UnknownVerb;
  verb_wordnum = 0;
  return 'no.verb';
];


!===============================================================================
! (6) Incluir SpanishG.h; Otros Includes
!-------------------------------------------------------------------------------


Include "SpanishG";

Include "random";          ! Cambia la función random()


!===============================================================================
! (7) Clases del Juego
!-------------------------------------------------------------------------------


Class Lugar
  with
    describe [;
      PrintOrRun(self, description);
      if (mostrarSalidas) {
        new_line;
        #ifdef TARGET_GLULX;
            glk_set_style(style_Emphasized);
        #ifnot;
            style bold;
        #endif;
        <Salidas>;
        #ifdef TARGET_GLULX;
            glk_set_style(style_Normal);
        #ifnot;
            style roman;
        #endif;
        rtrue;
      }
    ],
    number,                           ! Necesario en varias librerías
  has
    scenery light;


!===============================================================================
! (8) Objetos del Juego
!-------------------------------------------------------------------------------


Object cuarto_katie;


! ====================================================================
! OBJETOS DE SOPORTE
! ====================================================================


!===============================================================================
! (9) Otras Rutinas Reemplazadas; Rutinas Propias del Juego
!-------------------------------------------------------------------------------


#ifdef DEBUG;
! En modo depuración podemos saltarnos la espera pulsando una tecla:
[ WaitDelay delay;
  return KeyDelay(delay);
];
#endif;


[ ComoHablar;
  print_ret "[Para hablar con un personaje, usa la forma ~",
            (s_input) "PERSONAJE, lo que sea", "~. Por ejemplo: ~",
            (s_input) "JASON, QUÉ OPINAS DE MADRE", "~.]";
];


! Text in Emphasized style
[ s_emph text;
   #ifdef TARGET_GLULX;
     glk_set_style(style_Emphasized);
     print (string) text;
     glk_set_style(style_Normal);
   #ifnot; ! COMPILACION PARA MAQUINA Z
     style bold;
     print (string) text;
     style roman;
   #endif; ! TARGET_
];


! Text in Input style
[ s_input text;
   #ifdef TARGET_GLULX;
     glk_set_style(style_Input);
     print (string) text;
     glk_set_style(style_Normal);
   #ifnot; ! COMPILACION PARA MAQUINA Z
     print (string) text;
   #endif; ! TARGET_
];


! Text in Bold style (like Inform)
[ s_bold text;
    print (s_emph) text;
];


! Text in Preformatted style
[ s_pref text;
   #ifdef TARGET_GLULX;
     glk_set_style(style_Preformatted);
     print (string) text;
     glk_set_style(style_Normal);
   #ifnot; ! COMPILACION PARA MAQUINA Z
     font off;
     print (string) text;
     font on;
   #endif; ! TARGET_
];


! Text in Header style
[ s_head text;
   #ifdef TARGET_GLULX;
     glk_set_style(style_Header);
     print (string) text;
     glk_set_style(style_Normal);
   #ifnot; ! COMPILACION PARA MAQUINA Z
     print (s_bold) text;
   #endif; ! TARGET_
];


!===============================================================================
! (10) Verbos y Gramaticas Propias del Juego
!-------------------------------------------------------------------------------


Verb meta 'ayuda'
  *                 -> Ayuda;

Verb 'chilla' = 'grita';

Verb meta 'creditos'
  *                 -> Creditos;

Verb 'cuentale' = 'cuenta';

Extend 'di' first
  * 'a//' creature            -> Answer;

Extend only 'grita' replace
  *                 -> Gritar
  * 'a//' creature  -> Gritar;

Extend 'habla' first
  * 'con' creature topic     -> Tell
  * 'con' creature           -> Tell
  * 'a//' creature           -> Tell;

Verb 'hola'
  *                 -> Saludar;

Verb 'llama'
  *                 -> Llamar
  * 'a//' noun      -> Llamar
  * 'por' noun      -> LlamarPor;

Verb 'preguntale' = 'pregunta';

Extend 'pregunta' replace
  * creature 'sobre'/'por' topic       -> Pregunta
  * 'a//' creature                     -> Pregunta
  * 'a//' creature 'sobre'/'por' topic -> Pregunta
  * 'sobre'/'por' topic 'a//' creature -> Pregunta reverse
  * topic 'a//' creature               -> Pregunta reverse
  * 'a//' creature 'acerca' 'de' topic -> Pregunta;

Extend only 'sal' 'salte' 'salirse' 'salirte'
  * noun            -> SalirA
  * 'a//' noun      -> SalirA;

Extend 'sal'
  * 'por' noun      -> SalirPor;

Extend 'saluda' first
  *                 -> Saludar;

Verb 'sigue'
  * creature               -> Seguir
  * creature 'aqui'        -> Seguir
  * 'a//' creature         -> Seguir
  * 'a//' creature 'aqui'  -> Seguir;

Verb 'vamonos' 'vayamonos'
  *                  -> Venir
  * 'de' 'aqui'      -> Venir;

Verb 'vamos'
  *                  -> Venir;

Verb 'ven'
  *                  -> Venir
  * 'aqui'           -> Venir
  * 'conmigo'        -> Venir;

#ifdef DEBUG;
Verb meta 't'
  *                    -> TestPasoAPaso;

Verb meta 'tt'
  *                    -> TestContinuar;
#endif;


!===============================================================================
! (11) Rutinas de Acciones Propias del Juego
!-------------------------------------------------------------------------------


[ AyudaSub;
  print "Prueba a pedir ayuda a alguien. Si necesitas pistas más elaboradas,
         puedes usar el sistema de pistas interactivas tecleando el comando ",
         (s_input) "PISTAS", ".^";
];


[ CreditosSub;
  print (s_head) "^@<<MOMENTUM@>>", " --- (c) 2012 Alpha Aventuras^^";
  print (s_bold) "-- PROGRAMACIÓN Y DISEÑO:^";
  print "    Ricardo Pérez López^^";
  print (s_bold) "-- GRÁFICOS:^";
  print "    Manuel Millán Ruiz^^";
  print (s_bold) "-- TEXTOS:^";
  print "    Ricardo Pérez López^^";
  print (s_bold) "-- MAPEADO Y DOCUMENTACIÓN:^";
  print "    Ricardo Pérez López^";
  print "    Antonio Matiola Ortiz^^";
  print (s_bold) "-- PRUEBAS:^";
  print "    Ricardo Pérez López^";
  print "    Manuel Millán Ruiz^^";
  KeyDelay();
  print "Desarrollado usando el lenguaje Inform, de Graham Nelson,
         con ayuda de las siguientes librerías:^^";
  print "- INFSP6 (fix), de Sarganar et al.^";
  print "- Adaptación de SGW+DMX, de Eliuk Blau^";
  print "- Damusix, de Eliuk Blau^";
  print "- PNJactor_NG y PNJacciones_NG (adaptaciones de los originales de Zak
           y Carlos)^";
  print "- Moviles_NG (adaptación de Moviles, de Mel Hython)^";
  print "- PNJpuertas_NG (Adaptación de PnjPuertas, de Jaevius)^";
  print "- Decir, de Zak^";
  print "- Etemas, de Zak^";
  print "- Decorado_NG (adaptación de Decorado, de Zak y Mel Hython)^";
  print "- Adaptación de Barra, de Presi^";
  print "- Adaptación de ZIPI, de Zak^";
  print "- Timer, de Sothoth";
  KeyDelay();
  print "^^Basado en la novela @<<Ringu@>> de Koji Suzuki y el film
         @<<The Ring@>> (c) 2002 Dreamworks SKG.";
  print "^^Nuestro agradecimiento a todos los integrantes del CAAD que nos han
         ayudado, directa o indirectamente, en el desarrollo de esta aventura.^^
         (c) 2012 Alpha Aventuras^^
         Este programa es software libre, publicado bajo la licencia GNU GPL v3.
         El texto completo de la licencia se encuentra en la siguiente
         dirección:^^";
  print (s_pref) "http://www.gnu.org/licenses/gpl.txt^";
  print "^El código fuente del programa está disponible en Github:^^";
  print (s_pref) "https://bitbucket.com/ricpelo/momentum^";
  KeyDelay();
  print "^Visítanos en:^^";
  print (s_pref) "http://www.alpha-aventuras.es^
        http://wiki.caad.es/Alpha_Aventuras^
        http://www.facebook.com/alphaaventuras^";
  KeyDelay();
];


[ GritarSub;
  "Emites un sonoro grito, pero nadie responde.";
];


[ LlamarPorSub;
  "Con eso no puedes llamar a ningún sitio.";
];


[ LlamarSub;
  "¿Llamar a qué o a quién?";
];


[ PreguntaSub;
  ComoHablar();
];


! Para poder poner "SALIR AL PASILLO", que sería lo mismo que "ENTRA EN EL
! PASILLO".
[ SalirASub;
  print_ret (The) noun, " no es algo a donde puedas salir.";
];


[ SalirPorSub;
  if (noun ofclass Lugar) <<Exit>>;
  else                    <<Enter noun>>;
];


[ SaludarSub;
  "Saludas cordialmente.";
];


[ SeguirSub;
  "Decide por ti mism", (o) player, " a dónde deseas ir.";
];


[ VenirSub;
  <<Seguir player>>;
];


#ifdef DEBUG;
[ TestPasoAPasoSub;
  test_machine.run_once();
];


[ TestContinuarSub;
  test_machine.run();
];
#endif;
